"""Subclass of MyFrame1, which is generated by wxFormBuilder."""

import wx
import sys_of_RSS
from sys_of_RSSMyFrame8 import sys_of_RSSMyFrame8
from sys_of_RSSMyFrame3 import sys_of_RSSMyFrame3
import pymysql
account_status="not log in"
# Implementing MyFrame1
class sys_of_RSSMyFrame1( sys_of_RSS.MyFrame1 ):
	def __init__( self, parent ):
		sys_of_RSS.MyFrame1.__init__( self, parent )

		# 数据库连接参数（实际使用时建议使用输入框）
		self.db_config = {
            'host': 'localhost',
            'user': 'root',
            'password': '1111',
            'database': 'grocery_sys_test',
            'charset': 'utf8mb4'
        }

	# Handlers for MyFrame1 events.
	def login( self, event ):
		# TODO: Implement login

		#在 login 方法开头声明全局变量：
		global account_status#！

		try:
			login_name=self.m_textCtrl1.GetValue()
			password=self.m_textCtrl2.GetValue()
            # 建立数据库连接
			connection = pymysql.connect(**self.db_config)
			cursor = connection.cursor()
			#k=-1##登录状态
			try:
				cursor.execute("SELECT password FROM employee_copy1 WHERE name = %s", (login_name,))#避免注入风险
				real_password=cursor.fetchall()[0][0]
				print(real_password)
				if account_status=="not log in":#判断是否已经登录
					
					if password==real_password:
						self.m_textCtrl1.Clear()
						self.m_textCtrl2.Clear()
						self.m_textCtrl12.SetValue("登录成功!")

						#2025.06.10 #状态与身份
						cursor.execute("SELECT place FROM employee_copy1 WHERE name = %s", (login_name,))
						getplace=cursor.fetchall()[0][0]
						if getplace=="":
							account_status="unknown"
						else:
							if getplace=='老板' or getplace=='总裁' or '经理' in getplace or '主管' in getplace or '管理员'in getplace:
								account_status="admin"
							#account_status=getplace
							else:
								account_status="normal"
						print(account_status)

						#直接调用了父类 sys_of_RSS.MyFrame8 而非子类 sys_of_RSSMyFrame8。
						#要用子类sys_of_RSSMyFrame8
						child =sys_of_RSSMyFrame8(parent=self,cursor=cursor)##千万不能用sys_of_RSS.MyFrame8， 不然后续无法操作。2025.06.14
						child.Show()
						#sys_of_RSS.MyFrame8(self, account_status).Show()##
						


						#k=1
					else:
						self.m_textCtrl12.SetValue("已有用户登录。请不要重复登录！")

				else:
					#k=0
					self.m_textCtrl12.SetValue("密码错误！")
			except:
				self.m_textCtrl12.SetValue("用户名不存在！")
			
		except pymysql.Error as e:
			wx.MessageBox(f"数据库错误: {e}", "错误", wx.OK | wx.ICON_ERROR)
			print("数据库连接错误！")
		

		
		'''
		finally:
            # 关闭连接
			if 'connection' in locals() and connection.open:
				cursor.close()
				connection.close()
		'''	
		
		pass

	def gotosignup( self, event ):
		# TODO: Implement sign_in
		try:
			
            # 建立数据库连接
			connection = pymysql.connect(**self.db_config)
			cursor = connection.cursor()
		except pymysql.Error as e:
			wx.MessageBox(f"数据库错误: {e}", "错误", wx.OK | wx.ICON_ERROR)
			print("数据库连接错误！")

		child =sys_of_RSSMyFrame3(parent=self)
		child.Show()
		#sys_of_RSS.MyFrame3(self, account_status).Show()
		pass

	def logclear( self, event ):
		# TODO: Implement logclear

		pass


if __name__ == '__main__':



	app = wx.App()

	sys_of_RSSMyFrame1(None).Show()

	app.MainLoop()